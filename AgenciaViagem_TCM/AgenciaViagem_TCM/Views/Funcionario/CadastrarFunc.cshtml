@model AppClasses.Funcionario

@{
    ViewBag.Title = "CADASTRO DE FUNCIONÁRIOS";
    Layout = "~/Views/Shared/_LayoutLogado.cshtml";
}

<center>
    <h2 class="col-md-12"><b> CADASTRO </b></h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" id="divTelaCheia">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.NomeFuncioario, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.NomeFuncioario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NomeFuncioario, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Cargo, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Cargo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cargo, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.SenhaFuncionario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.SenhaFuncionario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SenhaFuncionario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <br />
                <div class="col-md-offset-2 col-md-8">
                    <input type="submit" value="CADASTRAR" class="btn btn-info" />
                </div>
            </div>
        </div>
    }

</center>
<div>
    <center>
        <div class="col-md-offset-2 col-md-8">
            <a href="~/Funcionario">
                <input type="button" value="LISTAR FUNCIONÁRIOS" class="btn btn-info" />
            </a>
        </div>
    </center>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}