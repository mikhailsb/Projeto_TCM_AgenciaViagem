@model AppClasses.Cliente

@{
    ViewBag.Title = "ALTERAR CLIENTE";
    Layout = "~/Views/Shared/_LayoutLogado.cshtml";
}
<div id="divTelaCheia">
    <center>
        <h2><b> ALTERAR </b></h2>
    </center>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
    <center>
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.IdCliente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.IdCliente, new { htmlAttributes = new { @class = "form-control alteraId" } })
                    @Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NomeCliente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.NomeCliente, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NomeCliente, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.RG, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RG, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-8">
                    <input type="submit" value="SALVAR ALTERAÇÕES" class="btn btn-info" />
                </div>
            </div>
        </div>
    </center>
    }
</div>
<div>
    <center>
        <a href="~/Cliente">
            <input type="button" value="LISTAR CLIENTES" class="btn btn-info" />
        </a>
    </center>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
